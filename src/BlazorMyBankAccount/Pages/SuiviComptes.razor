@page "/suivi"
@attribute [Authorize(Roles = "Admin, Member")]
@inject ISuiviCompteViewModel ViewModel

<h2>Suivi des Comptes</h2>

@if (ViewModel.HasConfig)
{
	<div class="w-100">
		<RadzenDropDown TValue="Compte" 
					Placeholder="Choisir un compte..." 
					Data=@ViewModel.Comptes
					TextProperty="Nomcompte" 
					Disabled=@ViewModel.IsLoading
					Change=@(args => ViewModel.OnSelectCompte(args))
					@bind-Value="ViewModel.CompteSelected" />
	</div>
}

@if(ViewModel.IsLoading)
{
	<div>Chargement des données.</div>
}
else
{
	@if(ViewModel.HasConfig)
	{
		<div>
			<div class="col-4">
				<button @onclick="ViewModel.DisplayNewOperation">Nouvelle Operation</button>
				<button @onclick="ViewModel.DisplayVirement">Virement</button>
			</div>
			<div class="col-4">
				Mois en cours : <strong>@ViewModel.GetMois()</strong>
			</div>
			
		</div>

		@if(ViewModel.DisplayRenderFragment != null)
		{
			@ViewModel.DisplayRenderFragment
		}

<div class="padding-5">

	<RadzenTabs TabPosition="TabPosition.Top"
				Change=@ViewModel.LoadBudget >
		<Tabs>
			<RadzenTabsItem Text="Compte">
			<div>
				<div>
					<span><strong>Actuelle</strong>: @ViewModel.MontantActuel</span>
				</div>
				<div>
					<span><strong>Prévision</strong>: @ViewModel.MontantPrevisionnel</span>
				</div>
			</div>

				<RadzenDataGrid AllowFiltering="true"
							FilterCaseSensitivity="FilterCaseSensitivity.Default"
							AllowPaging="true"
							PageSize="30"
							AllowSorting="true"
							Data="@ViewModel.SuiviDuCompte"
							TItem="Suivicompte"
							EmptyText="Aucune transaction"
							@ref="ViewModel.SaisieGrid"
							CellContextMenu=@(args => ViewModel.OnCellContextMenu(args))>
							
					<Columns>
						@*Date*@
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Datetransaction"
										  Title="Date"
										  Filterable="false"
										FormatString="{0:d}">
							<EditTemplate Context="suivi">
								<RadzenDatePicker @bind-Value="suivi.Datetransaction"
												DateFormat="d" />
							</EditTemplate>
						</RadzenDataGridColumn>

						@*Montant*@
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Montant"
										  Title="Montant">
							<EditTemplate Context="suivi">
								<RadzenNumeric TValue="decimal" 
									Format="c" 
									@bind-Value="suivi.Montant"
									Placeholder="Montant"  />
							</EditTemplate>
						</RadzenDataGridColumn>
			
						@*Nom de la transaction*@
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Nomtransaction"
										  Title="Nom">
							<EditTemplate Context="suivi">
								<RadzenTextBox Placeholder="Nom..."
									@bind-Value="suivi.Nomtransaction" />
							</EditTemplate>
						</RadzenDataGridColumn>
						
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Commentaire"
										  Title="Commentaire" >
							<EditTemplate Context="suivi">
								<RadzenTextBox Placeholder="Commentaire..."
									@bind-Value="suivi.Commentaire" />
							</EditTemplate>
						</RadzenDataGridColumn>
						
						@*Type*@
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Type.Nom"
										  Title="Type">

							<EditTemplate Context="suivi">
								<RadzenDropDown TValue="Typestransaction" 
									Placeholder="Choisir un type..." 
									Data=@ViewModel.TypesTransaction
									TextProperty="Nom"
									@bind-Value="suivi.Type"/>
							</EditTemplate>
						</RadzenDataGridColumn>
						
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Isvalidate"
										  Title="Est validé ?"
											Width="100px">
							<Template Context="suivi">
								<RadzenCheckBox Value="suivi.Isvalidate"
												Disabled="true"
												TValue="bool" />
							</Template>
						</RadzenDataGridColumn>

						@*Bouton pour faire une modification*@
						<RadzenDataGridColumn TItem="Suivicompte" 
											Filterable="false" 
											Sortable="false" 
											TextAlign="TextAlign.Center" Width="120px">
						    <Template Context="suivi">
						        <RadzenButton Icon="edit" 
												ButtonStyle="ButtonStyle.Light" 
												Class="m-1" 
												Disabled="ViewModel.IsRowEdit"
												Click="@(args => ViewModel.EditRowSuivi(suivi))" 
												@onclick:stopPropagation="true">
						        </RadzenButton>
						    </Template>

						    <EditTemplate Context="suivi">
						        <RadzenButton Icon="check" 
												ButtonStyle="ButtonStyle.Primary" 
												Class="m-1" 
												Click="@((args) => ViewModel.SaveRow(suivi))">
						        </RadzenButton>
						        <RadzenButton Icon="close" 
												ButtonStyle="ButtonStyle.Light" 
												Class="m-1" 
												Click="@((args) => ViewModel.CancelEdit(suivi))">
						        </RadzenButton>
						    </EditTemplate>
						</RadzenDataGridColumn>


					</Columns>
				</RadzenDataGrid>
			</RadzenTabsItem>
	
			@foreach(Budget budget in ViewModel.Budgets)
			{
			<RadzenTabsItem Text="@budget.Nombudget">

				<div><u>Type de budget</u> : @budget.Typebudget.Nomtypebudget</div>

				<div>Montant de base : @budget.Montant</div>
				<div>Montant restant : @ViewModel.MontantRestantBudget</div>

				<RadzenDataGrid AllowFiltering="true"
							FilterCaseSensitivity="FilterCaseSensitivity.Default"
							AllowPaging="true"
							PageSize="30"
							AllowSorting="true"
							Data="@ViewModel.SuiviDuCompte"
							TItem="Suivicompte"
							EmptyText="Aucune transaction">
					<Columns>
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Datetransaction"
										  Title="Date"
										  Filterable="false"
										  FormatString="{0:d}" />

						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Montant"
										  Title="Montant" />
			
						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Nomtransaction"
										  Title="Nom" />

						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Type.Nom"
										  Title="Type">
						</RadzenDataGridColumn>

						<RadzenDataGridColumn TItem="Suivicompte"
										  Property="Isvalidate"
										  Title="Est validé ?"
											Width="70px">
							<Template Context="suivi">
								<RadzenCheckBox Value="suivi.Isvalidate"
												Name="CheckBox1" 
												TValue="bool" />
							</Template>
						</RadzenDataGridColumn>
					</Columns>
				</RadzenDataGrid>
			</RadzenTabsItem>
			}
		</Tabs>
	</RadzenTabs>
		
</div>

}
	else
	{
	<h1>Attention</h1>
    
    <div>Aucun compte par défaut configuré.</div>
    <div>Connectez vous, et configurer un compte par défaut et le mois/année de traitement.</div>	
	}

}

@code {
	protected async override Task OnInitializedAsync()
	{
		ViewModel.SetStateHasChanged(StateHasChanged);
		await ViewModel.InitData();
	}

}